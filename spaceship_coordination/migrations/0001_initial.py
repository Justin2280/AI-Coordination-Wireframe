# Generated by Django 4.2.7 on 2025-08-18 15:41

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('do_nothing', 'Do Nothing'), ('travel', 'Travel'), ('send_probe', 'Send Probe'), ('mine_shallow', 'Mine Shallow'), ('mine_deep', 'Mine Deep'), ('deploy_robot', 'Deploy Robot')], max_length=20)),
                ('target_asteroid', models.CharField(blank=True, max_length=20, null=True)),
                ('pu_spent', models.IntegerField(default=0)),
                ('auto_do_nothing', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'action',
            },
        ),
        migrations.CreateModel(
            name='Asteroid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Alpha', 'Alpha'), ('Beta', 'Beta'), ('Gamma', 'Gamma'), ('Omega', 'Omega')], max_length=20)),
                ('max_minerals', models.IntegerField(help_text='Maximum minerals available')),
                ('shallow_cost', models.IntegerField(help_text='Cost to mine shallow')),
                ('deep_cost', models.IntegerField(help_text='Cost to mine deep')),
                ('travel_cost', models.IntegerField(help_text='Cost to travel to this asteroid')),
                ('discovered_round', models.IntegerField(blank=True, null=True)),
                ('mined', models.BooleanField(default=False)),
                ('mined_round', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'asteroid',
            },
        ),
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.CharField(max_length=50, unique=True)),
                ('current_system', models.CharField(default='Alpha', max_length=20)),
                ('current_round', models.IntegerField(default=0)),
                ('current_stage', models.CharField(choices=[('waiting', 'Waiting for Crew'), ('briefing', 'Briefing'), ('action', 'Action'), ('result', 'Result'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='waiting', max_length=20)),
                ('stage_start_time', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'crew',
            },
        ),
        migrations.CreateModel(
            name='ExperimentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('pressure', models.CharField(choices=[('high', 'High Pressure (90s)'), ('low', 'Low Pressure (180s)')], max_length=10)),
                ('complexity', models.CharField(choices=[('high', 'High Complexity (Private Intel)'), ('low', 'Low Complexity (Shared Intel)')], max_length=10)),
                ('captain_type', models.CharField(choices=[('human', 'Human Captain'), ('llm', 'LLM Captain')], max_length=10)),
                ('seed', models.IntegerField(help_text='Random seed for this session')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'experiment_session',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_id', models.CharField(max_length=100, unique=True)),
                ('prolific_id', models.CharField(blank=True, max_length=100)),
                ('role', models.CharField(choices=[('captain', 'Captain'), ('navigator', 'Navigator'), ('driller', 'Driller')], max_length=20)),
                ('consent_given', models.BooleanField(default=False)),
                ('consent_timestamp', models.DateTimeField(blank=True, null=True)),
                ('comprehension_correct', models.BooleanField(blank=True, null=True)),
                ('comprehension_first_try', models.BooleanField(blank=True, null=True)),
                ('survey_completed', models.BooleanField(default=False)),
                ('bonus_amount', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crew', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.crew')),
            ],
            options={
                'db_table': 'experiment_participant',
            },
        ),
        migrations.CreateModel(
            name='SystemEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('disconnect', 'Participant Disconnected'), ('reconnect', 'Participant Reconnected'), ('cancel', 'Session Cancelled'), ('timeout', 'Action Timeout'), ('grace_period_start', 'Grace Period Started'), ('grace_period_end', 'Grace Period Ended')], max_length=30)),
                ('details', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('crew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.crew')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.participant')),
            ],
            options={
                'db_table': 'system_event',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)])),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], max_length=20)),
                ('gender_other', models.CharField(blank=True, max_length=100)),
                ('age', models.IntegerField(choices=[(18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65)])),
                ('education', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='List of selected education options')),
                ('employment_status', models.CharField(choices=[('self_employed', 'Self-employed'), ('employed_full_time', 'Employed full time'), ('employed_part_time', 'Employed part time'), ('unemployed_looking', 'Unemployed looking'), ('unemployed_not_looking', 'Unemployed not looking'), ('retired', 'Retired'), ('student', 'Student'), ('unable_to_work', 'Unable to work')], max_length=30)),
                ('industry', models.CharField(max_length=100)),
                ('years_experience', models.IntegerField()),
                ('job_title', models.CharField(max_length=200)),
                ('annual_income', models.CharField(max_length=50)),
                ('open_comments', models.TextField(blank=True)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.participant')),
            ],
            options={
                'db_table': 'survey',
            },
        ),
        migrations.CreateModel(
            name='RoundState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField()),
                ('stage', models.CharField(choices=[('briefing', 'Briefing'), ('action', 'Action'), ('result', 'Result')], max_length=20)),
                ('stage_start_time', models.DateTimeField(auto_now_add=True)),
                ('pu_remaining', models.IntegerField()),
                ('current_system', models.CharField(max_length=20)),
                ('briefing_time_remaining', models.IntegerField(blank=True, null=True)),
                ('action_time_remaining', models.IntegerField(blank=True, null=True)),
                ('result_time_remaining', models.IntegerField(blank=True, null=True)),
                ('crew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.crew')),
            ],
            options={
                'db_table': 'round_state',
                'unique_together': {('crew', 'round_number')},
            },
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minerals_gained', models.IntegerField()),
                ('full_extraction', models.BooleanField()),
                ('partial_fraction', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('probability_basis', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('depth', models.CharField(choices=[('shallow', 'Shallow'), ('deep', 'Deep')], max_length=10)),
                ('intel_combo', models.CharField(choices=[('none', 'No Intel'), ('probe_only', 'Probe Only'), ('robot_only', 'Robot Only'), ('probe_plus_robot', 'Probe + Robot')], max_length=20)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.action')),
                ('asteroid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.asteroid')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.participant')),
                ('round_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.roundstate')),
            ],
            options={
                'db_table': 'outcome',
            },
        ),
        migrations.AddField(
            model_name='crew',
            name='captain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='captain_crews', to='spaceship_coordination.participant'),
        ),
        migrations.AddField(
            model_name='crew',
            name='driller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driller_crews', to='spaceship_coordination.participant'),
        ),
        migrations.AddField(
            model_name='crew',
            name='navigator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='navigator_crews', to='spaceship_coordination.participant'),
        ),
        migrations.AddField(
            model_name='crew',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.experimentsession'),
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('stage_only', models.CharField(default='briefing', max_length=20)),
                ('from_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='spaceship_coordination.participant')),
                ('round_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.roundstate')),
                ('to_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='spaceship_coordination.participant')),
            ],
            options={
                'db_table': 'chat_message',
            },
        ),
        migrations.AddField(
            model_name='asteroid',
            name='discovered_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='spaceship_coordination.participant'),
        ),
        migrations.AddField(
            model_name='asteroid',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.experimentsession'),
        ),
        migrations.AddField(
            model_name='action',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.participant'),
        ),
        migrations.AddField(
            model_name='action',
            name='round_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.roundstate'),
        ),
        migrations.CreateModel(
            name='IntelVisibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intel_type', models.CharField(choices=[('max_minerals', 'Max Minerals'), ('shallow_cost', 'Shallow Mining Cost'), ('deep_cost', 'Deep Mining Cost')], max_length=20)),
                ('discovered_round', models.IntegerField()),
                ('visibility_footprint', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='JSON audit trail')),
                ('asteroid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.asteroid')),
                ('round_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.roundstate')),
                ('visible_to_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.participant')),
            ],
            options={
                'db_table': 'intel_visibility',
                'unique_together': {('round_state', 'asteroid', 'intel_type', 'visible_to_participant')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='asteroid',
            unique_together={('name', 'session')},
        ),
        migrations.CreateModel(
            name='AnalyticsSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField()),
                ('cumulative_minerals', models.IntegerField()),
                ('cumulative_pu_team', models.IntegerField()),
                ('cumulative_pu_captain', models.IntegerField()),
                ('cumulative_pu_navigator', models.IntegerField()),
                ('cumulative_pu_driller', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('crew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaceship_coordination.crew')),
            ],
            options={
                'db_table': 'analytics_snapshot',
                'unique_together': {('crew', 'round_number')},
            },
        ),
    ]
